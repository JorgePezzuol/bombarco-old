<?php

/**
 * This is the model base class for the table "bombarcoshop_transacoes".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "BombarcoshopTransacoes".
 *
 * Columns in table "bombarcoshop_transacoes" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $nome
 * @property string $email
 * @property integer $id_produto
 * @property string $tid_externo
 * @property string $dataregistro
 * @property string $tid_interno
 *
 */
abstract class BaseBombarcoshopTransacoes extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'bombarcoshop_transacoes';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'BombarcoshopTransacoes|BombarcoshopTransacoes', $n);
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('nome, email, id_produto, tid_externo, tid_interno', 'required'),
			array('id_produto', 'numerical', 'integerOnly'=>true),
			array('nome, email, tid_externo, tid_interno', 'length', 'max'=>120),
			array('id, nome, email, id_produto, tid_externo, dataregistro, tid_interno', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'nome' => Yii::t('app', 'Nome'),
			'email' => Yii::t('app', 'Email'),
			'id_produto' => Yii::t('app', 'Id Produto'),
			'tid_externo' => Yii::t('app', 'Tid Externo'),
			'dataregistro' => Yii::t('app', 'Dataregistro'),
			'tid_interno' => Yii::t('app', 'Tid Interno'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('id_produto', $this->id_produto);
		$criteria->compare('tid_externo', $this->tid_externo, true);
		$criteria->compare('dataregistro', $this->dataregistro, true);
		$criteria->compare('tid_interno', $this->tid_interno, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'sort'=>array(
			    'defaultOrder'=>'dataregistro DESC',
			  )
		));
	}
}