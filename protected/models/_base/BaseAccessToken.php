<?php

/**
 * This is the model base class for the table "access_token".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AccessToken".
 *
 * Columns in table "access_token" available as properties of the model,
 * followed by relations of table "access_token" available as properties of the model.
 *
 * @property string $token
 * @property integer $user_id
 * @property string $scope
 * @property string $datetime
 * @property integer $status
 *
 * @property Usuarios $user
 */
abstract class BaseAccessToken extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'access_token';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AccessToken|AccessTokens', $n);
	}

	public static function representingColumn() {
		return 'datetime';
	}

	public function rules() {
		return array(
			array('token, user_id, datetime, status', 'required'),
			array('user_id, status', 'numerical', 'integerOnly'=>true),
			array('token', 'length', 'max'=>250),
			array('scope', 'length', 'max'=>100),
			array('scope', 'default', 'setOnEmpty' => true, 'value' => null),
			array('token, user_id, scope, datetime, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'Usuarios', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'token' => Yii::t('app', 'Token'),
			'user_id' => null,
			'scope' => Yii::t('app', 'Scope'),
			'datetime' => Yii::t('app', 'Datetime'),
			'status' => Yii::t('app', 'Status'),
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('token', $this->token, true);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('scope', $this->scope, true);
		$criteria->compare('datetime', $this->datetime, true);
		$criteria->compare('status', $this->status);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}