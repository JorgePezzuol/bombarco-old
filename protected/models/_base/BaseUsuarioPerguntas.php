<?php

/**
 * This is the model base class for the table "usuario_perguntas".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UsuarioPerguntas".
 *
 * Columns in table "usuario_perguntas" available as properties of the model,
 * followed by relations of table "usuario_perguntas" available as properties of the model.
 *
 * @property integer $id
 * @property integer $usuarios_id
 * @property string $nome
 * @property string $email
 * @property string $pergunta
 * @property string $data
 *
 * @property Usuarios $usuarios
 */
abstract class BaseUsuarioPerguntas extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'usuario_perguntas';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UsuarioPerguntas|UsuarioPerguntases', $n);
	}

	public static function representingColumn() {
		return 'data';
	}

	public function rules() {
		return array(
			array('usuarios_id, data', 'required'),
			array('usuarios_id', 'numerical', 'integerOnly'=>true),
			array('nome, email', 'length', 'max'=>45),
			array('pergunta', 'length', 'max'=>255),
			array('nome, email, pergunta', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, usuarios_id, nome, email, pergunta, data', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'usuarios' => array(self::BELONGS_TO, 'Usuarios', 'usuarios_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'usuarios_id' => null,
			'nome' => Yii::t('app', 'Nome'),
			'email' => Yii::t('app', 'Email'),
			'pergunta' => Yii::t('app', 'Pergunta'),
			'data' => Yii::t('app', 'Data'),
			'usuarios' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('usuarios_id', $this->usuarios_id);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('pergunta', $this->pergunta, true);
		$criteria->compare('data', $this->data, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}