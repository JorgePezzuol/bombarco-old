<?php

/**
 * This is the model base class for the table "motor_anuncio_preview".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MotorAnuncioPreview".
 *
 * Columns in table "motor_anuncio_preview" available as properties of the model,
 * followed by relations of table "motor_anuncio_preview" available as properties of the model.
 *
 * @property integer $id
 * @property integer $usuarios_id
 * @property integer $plano_usuarios_id
 * @property integer $motor_tipos_id
 * @property integer $motor_fabricantes_id
 * @property string $potencia
 * @property string $cilindrada
 * @property string $rpm
 * @property string $combustivel
 * @property string $ampere
 * @property string $sistema_partida
 * @property string $direcao
 * @property string $comprimento_eixo
 * @property string $relacao_engrenagens
 * @property string $tipo
 * @property string $peso_seco
 * @property string $horas
 * @property string $descricao
 * @property string $estado
 * @property integer $ano
 * @property string $video
 * @property string $valor
 * @property integer $status
 * @property string $data_registro
 *
 * @property MotorFabricantes $motorFabricantes
 * @property PlanoUsuarios $planoUsuarios
 * @property MotorTipos $motorTipos
 * @property Usuarios $usuarios
 * @property MotorImagensPreview[] $motorImagensPreviews
 */
abstract class BaseMotorAnuncioPreview extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'motor_anuncio_preview';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MotorAnuncioPreview|MotorAnuncioPreviews', $n);
	}

	public static function representingColumn() {
		return 'data_registro';
	}

	public function rules() {
		return array(
			array('data_registro', 'required'),
			array('usuarios_id, plano_usuarios_id, motor_tipos_id, motor_fabricantes_id, ano, status', 'numerical', 'integerOnly'=>true),
			array('estado', 'length', 'max'=>1),
			array('valor', 'length', 'max'=>100),
			array('potencia, cilindrada, rpm, combustivel, ampere, sistema_partida, direcao, comprimento_eixo, relacao_engrenagens, tipo, peso_seco, horas, descricao, video', 'safe'),
			array('usuarios_id, plano_usuarios_id, motor_tipos_id, motor_fabricantes_id, potencia, cilindrada, rpm, combustivel, ampere, sistema_partida, direcao, comprimento_eixo, relacao_engrenagens, tipo, peso_seco, horas, descricao, estado, ano, video, valor, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, usuarios_id, plano_usuarios_id, motor_tipos_id, motor_fabricantes_id, potencia, cilindrada, rpm, combustivel, ampere, sistema_partida, direcao, comprimento_eixo, relacao_engrenagens, tipo, peso_seco, horas, descricao, estado, ano, video, valor, status, data_registro', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'motorFabricantes' => array(self::BELONGS_TO, 'MotorFabricantes', 'motor_fabricantes_id'),
			'planoUsuarios' => array(self::BELONGS_TO, 'PlanoUsuarios', 'plano_usuarios_id'),
			'motorTipos' => array(self::BELONGS_TO, 'MotorTipos', 'motor_tipos_id'),
			'usuarios' => array(self::BELONGS_TO, 'Usuarios', 'usuarios_id'),
			'motorImagensPreviews' => array(self::HAS_MANY, 'MotorImagensPreview', 'motor_anuncio_preview_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'usuarios_id' => null,
			'plano_usuarios_id' => null,
			'motor_tipos_id' => null,
			'motor_fabricantes_id' => null,
			'potencia' => Yii::t('app', 'Potencia'),
			'cilindrada' => Yii::t('app', 'Cilindrada'),
			'rpm' => Yii::t('app', 'Rpm'),
			'combustivel' => Yii::t('app', 'Combustivel'),
			'ampere' => Yii::t('app', 'Ampere'),
			'sistema_partida' => Yii::t('app', 'Sistema Partida'),
			'direcao' => Yii::t('app', 'Direcao'),
			'comprimento_eixo' => Yii::t('app', 'Comprimento Eixo'),
			'relacao_engrenagens' => Yii::t('app', 'Relacao Engrenagens'),
			'tipo' => Yii::t('app', 'Tipo'),
			'peso_seco' => Yii::t('app', 'Peso Seco'),
			'horas' => Yii::t('app', 'Horas'),
			'descricao' => Yii::t('app', 'Descricao'),
			'estado' => Yii::t('app', 'Estado'),
			'ano' => Yii::t('app', 'Ano'),
			'video' => Yii::t('app', 'Video'),
			'valor' => Yii::t('app', 'Valor'),
			'status' => Yii::t('app', 'Status'),
			'data_registro' => Yii::t('app', 'Data Registro'),
			'motorFabricantes' => null,
			'planoUsuarios' => null,
			'motorTipos' => null,
			'usuarios' => null,
			'motorImagensPreviews' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('usuarios_id', $this->usuarios_id);
		$criteria->compare('plano_usuarios_id', $this->plano_usuarios_id);
		$criteria->compare('motor_tipos_id', $this->motor_tipos_id);
		$criteria->compare('motor_fabricantes_id', $this->motor_fabricantes_id);
		$criteria->compare('potencia', $this->potencia, true);
		$criteria->compare('cilindrada', $this->cilindrada, true);
		$criteria->compare('rpm', $this->rpm, true);
		$criteria->compare('combustivel', $this->combustivel, true);
		$criteria->compare('ampere', $this->ampere, true);
		$criteria->compare('sistema_partida', $this->sistema_partida, true);
		$criteria->compare('direcao', $this->direcao, true);
		$criteria->compare('comprimento_eixo', $this->comprimento_eixo, true);
		$criteria->compare('relacao_engrenagens', $this->relacao_engrenagens, true);
		$criteria->compare('tipo', $this->tipo, true);
		$criteria->compare('peso_seco', $this->peso_seco, true);
		$criteria->compare('horas', $this->horas, true);
		$criteria->compare('descricao', $this->descricao, true);
		$criteria->compare('estado', $this->estado, true);
		$criteria->compare('ano', $this->ano);
		$criteria->compare('video', $this->video, true);
		$criteria->compare('valor', $this->valor, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('data_registro', $this->data_registro, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}