<?php

/**
 * This is the model base class for the table "tags".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Tags".
 *
 * Columns in table "tags" available as properties of the model,
 * followed by relations of table "tags" available as properties of the model.
 *
 * @property integer $id
 * @property string $titulo
 * @property string $slug
 *
 * @property Agendas[] $agendases
 * @property Conteudos[] $conteudoses
 * @property Embarcacoes[] $embarcacoes
 */
abstract class BaseTags extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tags';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Tags|Tags', $n);
	}

	public static function representingColumn() {
		return 'titulo';
	}

	public function rules() {
		return array(
			array('titulo, slug', 'required'),
			array('titulo', 'length', 'max'=>100),
			array('slug', 'length', 'max'=>150),
			array('id, titulo, slug', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'agendases' => array(self::MANY_MANY, 'Agendas', 'agendas_has_tags(tags_id, agendas_id)'),
			'conteudoses' => array(self::MANY_MANY, 'Conteudos', 'conteudos_has_tags(tags_id, conteudos_id)'),
			'embarcacoes' => array(self::MANY_MANY, 'Embarcacoes', 'embarcacoes_has_tags(tags_id, embarcacoes_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'agendases' => 'AgendasHasTags',
			'conteudoses' => 'ConteudosHasTags',
			'embarcacoes' => 'EmbarcacoesHasTags',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'titulo' => Yii::t('app', 'Titulo'),
			'slug' => Yii::t('app', 'Slug'),
			'agendases' => null,
			'conteudoses' => null,
			'embarcacoes' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('titulo', $this->titulo, true);
		$criteria->compare('slug', $this->slug, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}