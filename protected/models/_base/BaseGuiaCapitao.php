<?php

/**
 * This is the model base class for the table "guia_capitao".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "GuiaCapitao".
 *
 * Columns in table "guia_capitao" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $nome
 * @property string $email
 * @property string $telefone
 * @property string $empresa
 * @property integer $id
 * @property string $data
 *
 */
abstract class BaseGuiaCapitao extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'guia_capitao';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'GuiaCapitao|GuiaCapitaos', $n);
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('nome', 'length', 'max'=>60),
			array('email', 'length', 'max'=>50),
			array('telefone', 'length', 'max'=>40),
			array('empresa', 'length', 'max'=>120),
			array('data', 'safe'),
			array('nome, email, telefone, empresa, data', 'default', 'setOnEmpty' => true, 'value' => null),
			array('nome, email, telefone, empresa, id, data', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'nome' => Yii::t('app', 'Nome'),
			'email' => Yii::t('app', 'Email'),
			'telefone' => Yii::t('app', 'Telefone'),
			'empresa' => Yii::t('app', 'Empresa'),
			'id' => Yii::t('app', 'ID'),
			'data' => Yii::t('app', 'Data'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('telefone', $this->telefone, true);
		$criteria->compare('empresa', $this->empresa, true);
		$criteria->compare('id', $this->id);
		$criteria->compare('data', $this->data, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}