<?php

/**
 * This is the model base class for the table "estados".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Estados".
 *
 * Columns in table "estados" available as properties of the model,
 * followed by relations of table "estados" available as properties of the model.
 *
 * @property integer $id
 * @property string $nome
 * @property string $uf
 *
 * @property Cidades[] $cidades
 * @property Embarcacoes[] $embarcacoes
 * @property Empresas[] $empresases
 * @property Usuarios[] $usuarioses
 */
abstract class BaseEstados extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'estados';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Estados|Estadoses', $n);
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('nome, uf, slug', 'required'),
			array('nome, slug', 'length', 'max'=>45),
			array('uf', 'length', 'max'=>2),
			array('id, nome, uf, slug', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'cidades' => array(self::HAS_MANY, 'Cidades', 'estados_id'),
			'embarcacoes' => array(self::HAS_MANY, 'Embarcacoes', 'estados_id'),
			'empresases' => array(self::HAS_MANY, 'Empresas', 'estados_id'),
			'usuarioses' => array(self::HAS_MANY, 'Usuarios', 'estados_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'nome' => Yii::t('app', 'Nome'),
			'uf' => Yii::t('app', 'Uf'),
			'slug' => Yii::t('app', 'Slug'),
			'cidades' => null,
			'embarcacoes' => null,
			'empresases' => null,
			'usuarioses' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('uf', $this->uf, true);
		$criteria->compare('slug', $this->slug, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}