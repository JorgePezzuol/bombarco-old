<?php

/**
 * This is the model base class for the table "cidades".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Cidades".
 *
 * Columns in table "cidades" available as properties of the model,
 * followed by relations of table "cidades" available as properties of the model.
 *
 * @property integer $id
 * @property string $nome
 * @property integer $estados_id
 *
 * @property Bairros[] $bairroses
 * @property Estados $estados
 * @property Embarcacoes[] $embarcacoes
 * @property Empresas[] $empresases
 * @property Usuarios[] $usuarioses
 */
abstract class BaseCidades extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'cidades';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Cidades|Cidades', $n);
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('nome, estados_id', 'required'),
			array('estados_id', 'numerical', 'integerOnly'=>true),
			array('nome', 'length', 'max'=>100),
			array('id, nome, estados_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'bairroses' => array(self::HAS_MANY, 'Bairros', 'cidades_id'),
			'estados' => array(self::BELONGS_TO, 'Estados', 'estados_id'),
			'embarcacoes' => array(self::HAS_MANY, 'Embarcacoes', 'cidades_id'),
			'empresases' => array(self::HAS_MANY, 'Empresas', 'cidades_id'),
			'usuarioses' => array(self::HAS_MANY, 'Usuarios', 'cidades_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'nome' => Yii::t('app', 'Nome'),
			'estados_id' => null,
			'bairroses' => null,
			'estados' => null,
			'embarcacoes' => null,
			'empresases' => null,
			'usuarioses' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('estados_id', $this->estados_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}