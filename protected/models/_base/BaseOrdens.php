<?php

/**
 * This is the model base class for the table "ordens".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Ordens".
 *
 * Columns in table "ordens" available as properties of the model,
 * followed by relations of table "ordens" available as properties of the model.
 *
 * @property integer $id
 * @property integer $transacoes_id
 * @property integer $usuarios_id
 * @property integer $ordem_tipos_id
 * @property integer $id_item
 * @property string $data_criacao
 * @property string $data_ativacao
 * @property string $valor
 * @property string $descricao
 * @property integer $status
 *
 * @property Transacoes $transacoes
 * @property Usuarios $usuarios
 * @property OrdemTipos $ordemTipos
 */
abstract class BaseOrdens extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'ordens';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Ordens|Ordens', $n);
	}

	public static function representingColumn() {
		return 'data_criacao';
	}

	public $tid_externo;

	public function rules() {
		return array(
			array('usuarios_id, ordem_tipos_id, id_item, data_criacao, valor', 'required'),
			array('transacoes_id, usuarios_id, ordem_tipos_id, id_item, status', 'numerical', 'integerOnly'=>true),
			array('valor', 'length', 'max'=>10),
			array('descricao', 'length', 'max'=>100),
			array('data_ativacao', 'safe'),
			array('transacoes_id, data_ativacao, descricao, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, transacoes_id, usuarios_id, ordem_tipos_id, id_item, data_criacao, data_ativacao, valor, descricao, status, tid_externo', 'safe', 'on'=>'searchTurbinadas'),
			array('id, transacoes_id, usuarios_id, ordem_tipos_id, id_item, data_criacao, data_ativacao, valor, descricao, status, tid_externo', 'safe', 'on'=>'searchPlanos'),
			array('id, transacoes_id, usuarios_id, ordem_tipos_id, id_item, data_criacao, data_ativacao, valor, descricao, status, tid_externo', 'safe', 'on'=>'searchPlanosBoleto'),
		);
	}

	public function relations() {
		return array(
			'transacoes' => array(self::BELONGS_TO, 'Transacoes', 'transacoes_id'),
			'usuarios' => array(self::BELONGS_TO, 'Usuarios', 'usuarios_id'),
			'ordemTipos' => array(self::BELONGS_TO, 'OrdemTipos', 'ordem_tipos_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'transacoes_id' => null,
			'usuarios_id' => null,
			'ordem_tipos_id' => null,
			'id_item' => Yii::t('app', 'Id Item'),
			'data_criacao' => Yii::t('app', 'Data Criacao'),
			'data_ativacao' => Yii::t('app', 'Data Ativacao'),
			'valor' => Yii::t('app', 'Valor'),
			'descricao' => Yii::t('app', 'Descricao'),
			'status' => Yii::t('app', 'Status'),
			'transacoes' => null,
			'usuarios' => null,
			'ordemTipos' => null,
		);
	}

	public function searchTurbinadas() {
		$criteria = new CDbCriteria;

		$criteria->with = array('transacoes', 'usuarios');
		$criteria->together = true;
        $criteria->condition = 't.status = 2 and t.ordem_tipos_id = 5 and transacoes.formapagamento != "boleto"';

		$criteria->compare('id', $this->id);
		$criteria->compare('transacoes_id', $this->transacoes_id);
		$criteria->compare('t.usuarios_id', $this->usuarios_id);
		$criteria->compare('ordem_tipos_id', $this->ordem_tipos_id);
		$criteria->compare('id_item', $this->id_item);
		$criteria->compare('t.data_criacao', $this->data_criacao, true);
		$criteria->compare('t.valor', $this->valor, true);
		$criteria->compare('ordens.descricao', $this->descricao, true);
		$criteria->compare('t.status', $this->status);

		$criteria->compare("transacoes.tid_externo", $this->tid_externo, true);

		$criteria->order = 't.data_criacao DESC';


		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination' => array(
                'pageSize' => 20,
            )
			
		));
	}

	public function searchTurbinadasBoleto() {
		$criteria = new CDbCriteria;

		$criteria->with = array('transacoes', 'usuarios');
		$criteria->together = true;
        $criteria->condition = 'transacoes.status = 3 and t.ordem_tipos_id = 5 and transacoes.formapagamento = "boleto"';

		$criteria->compare('id', $this->id);
		$criteria->compare('transacoes_id', $this->transacoes_id);
		$criteria->compare('t.usuarios_id', $this->usuarios_id);
		$criteria->compare('ordem_tipos_id', $this->ordem_tipos_id);
		$criteria->compare('id_item', $this->id_item);
		$criteria->compare('t.data_criacao', $this->data_criacao, true);
		$criteria->compare('t.valor', $this->valor, true);
		$criteria->compare('ordens.descricao', $this->descricao, true);
		$criteria->compare('t.status', $this->status);

		$criteria->compare("transacoes.tid_externo", $this->tid_externo, true);

		$criteria->order = 't.data_criacao DESC';


		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination' => array(
                'pageSize' => 20,
            )
			
		));
	}

	public function searchPlanos() {
		$criteria = new CDbCriteria;

		$criteria->with = array('transacoes', 'usuarios');
		$criteria->together = true;
        $criteria->condition = 't.status = 2 and (t.ordem_tipos_id = 1 OR t.ordem_tipos_id = 2) and transacoes.formapagamento != "boleto"';

		$criteria->compare('id', $this->id);
		$criteria->compare('transacoes_id', $this->transacoes_id);
		$criteria->compare('t.usuarios_id', $this->usuarios_id);
		$criteria->compare('ordem_tipos_id', $this->ordem_tipos_id);
		$criteria->compare('id_item', $this->id_item);
		$criteria->compare('t.data_criacao', $this->data_criacao, true);
		$criteria->compare('t.valor', $this->valor, true);
		$criteria->compare('ordens.descricao', $this->descricao, true);
		$criteria->compare('t.status', $this->status);

		$criteria->compare("transacoes.tid_externo", $this->tid_externo, true);

		$criteria->order = 't.data_criacao DESC';


		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination' => array(
                'pageSize' => 20,
            )
			
		));
	}

	public function searchPlanosBoleto() {
		$criteria = new CDbCriteria;

		$criteria->with = array('transacoes', 'usuarios');
		$criteria->together = true;
        $criteria->condition = 'transacoes.status = 3 and (t.ordem_tipos_id = 1 OR t.ordem_tipos_id = 2) and transacoes.formapagamento = "boleto"';

		$criteria->compare('id', $this->id);
		$criteria->compare('transacoes_id', $this->transacoes_id);
		$criteria->compare('t.usuarios_id', $this->usuarios_id);
		$criteria->compare('ordem_tipos_id', $this->ordem_tipos_id);
		$criteria->compare('id_item', $this->id_item);
		$criteria->compare('t.data_criacao', $this->data_criacao, true);
		$criteria->compare('t.valor', $this->valor, true);
		$criteria->compare('ordens.descricao', $this->descricao, true);
		$criteria->compare('t.status', $this->status);

		$criteria->compare("transacoes.tid_externo", $this->tid_externo, true);

		$criteria->order = 't.data_criacao DESC';


		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
			'pagination' => array(
                'pageSize' => 20,
            )
			
		));
	}
}