<?php


class ContatosController extends GxController {
 
    public function filters() {
        return array(
            'accessControl',
        );
    }

    public function accessRules() {
        return array(
            array('allow',
                'actions' => array('mailAnunciante', 'contatoBombarco', 'marcarComoLida', 'contatoAgenda', 'contatoEmpresa', 'contatoEmpresaResposta', 'contatoTabelaBombarcoBusca', 'contatoTabelaBombarcoNaoEncontrou', 'partners', 'partner'),
                'users' => array('*'),
            ),
            array('allow',
                'actions' => array('minicreate', 'mensagensVelhas', 'view', 'create', 'update', 'mensagens', 'delete'),
                'users' => array('@'),
            ),
            array('deny',
                'users' => array('*'),
            ),
        );
    }

    // mensagens antes do minha conta
    public function actionMensagensVelhas() {

        $mensagens_velhas = Contatos::model()->findAll('usuarios_id_rem=:user and flag_msg_velha = 1', array(':user' => Yii::app()->user->id));

        $this->render('mensagens_velhas', array('mensagens_velhas' => $mensagens_velhas));
    }

    public function actionView($id) {

        Yii::app()->getClientScript()->registerScriptFile(Yii::app()->baseUrl . '/js/contato.js', CClientScript::POS_END);

        // verificar se a mensagem eh do usuario
        $c = Contatos::model()->findByPk($id);
        if ($c != null && $c->usuarios_id_dest == Yii::app()->user->id) {
            $this->render('view', array(
                'model' => $this->loadModel($id, 'Contatos'),
            ));
        } else {
            $this->redirect(Yii::app()->homeUrl);
        }
    }

    /* action que altera o status da mensagen para status de lida */

    public function actionMarcarComoLida() {

        if (isset($_POST)) {

            $id = $_POST['id'];

            $contato = Contatos::model()->findByPk($id);

            if ($contato != null) {

                if ($contato->tipo == 'S' || $contato->tipo == 'X') {
                    // marcar conversas como lidas
                    $conversas = Contatos::model()
                            ->findAll('email_rem=:email_rem AND usuarios_id_dest=:usuarios_id_dest AND embarcacoes_id=:embarcacoes_id', array(':email_rem' => $contato->email_rem, ':usuarios_id_dest' => $contato->usuarios_id_dest, ':embarcacoes_id' => $contato->embarcacoes_id));
                } else {

                    $conversas = Contatos::model()
                            ->findAll('email_rem=:email_rem AND usuarios_id_dest=:usuarios_id_dest AND empresas_id=:empresas_id', array(':email_rem' => $contato->email_rem, ':usuarios_id_dest' => $contato->usuarios_id_dest, ':empresas_id' => $contato->empresas_id));
                }

                if (count($conversas) > 0) {
                    foreach ($conversas as $conv) {
                        $conv->status = 1;
                        $conv->update();
                    }
                }
            }
        }
    }

    // enviar email do form de contato do /institucional
    public function actionContatoBombarco() {
        preg_match("/siteblindado/", $_POST["email_rem"], $arr);
        if(count($arr) > 0)
          return false;

        $parser = new CHtmlPurifier();

        // Honeypot
        if (!isset($_POST['mLmA8MdP']) || !empty($_POST['mLmA8MdP'])) {
            echo '-1';
            exit();
        }


        // enviar msg de contato para o admin
        // setar dados de contato
        $contato = new Contatos;
        $contato->setAttributes($_POST);
        $contato->data = date('Y-m-d H:i:s');
        $contato->email_dest = Yii::app()->params['bombarcoAtendimento'];
        $contato->tipo = 'C';

        $mensagem = $parser->purify($_POST['mensagem']) . ' Telefone: ' . $contato->telefone_rem;


        // salvar e enviar email
        if ($contato->save()) {

            // enviar email para admin a respeito do contato
            $message = new YiiMailMessage;
            $message->view = "mail_contato_admin";
            $message->subject = 'Contato - Site';
            $message->setBody(array('email' => $parser->purify($_POST['email_rem']), 'mensagem' => $mensagem), 'text/html');
            $message->addTo(Yii::app()->params['bombarcoAtendimento']);
            $message->setReplyTo($parser->purify($_POST['email_rem']));
            $message->from = Yii::app()->params['bombarcoAtendimento'];

            // envia msg
            if (!Yii::app()->mail->send($message)) {
                // erro
                echo '-1';
            }

            // msg enviada ok
            else {
                echo '1';
            }
        }

        // erro ao salvar o contato
        else {
            echo '-1';
        }
    }

    // E-mail de contato para o empresas/estaleiros
    // echo -1 => erro enviar email
    // echo -3 => tentou usar um email que já existe sem estar logado
    // echo -5 => tentou enviar a mensagem a si mesmo
    // echo -7 => usuário existe, digitou senha, mas é inválida
    // echo 1 => OK
    public function actionContatoEmpresa() {
        preg_match("/siteblindado/", $_POST["email_rem"], $arr);
        if(count($arr) > 0)
          return false;
        $parser = new CHtmlPurifier();

        // Honeypot
        /*if (!isset($_POST['j8BSVuvy']) || !empty($_POST['j8BSVuvy'])) {
            echo '-1';
            exit();
        }*/

        $check_login = false;
        $flgEstaleiro = (int) $parser->purify($_POST['flgEstaleiro']);

        // usuário ja existe e outra pessoa tentou logar com o email
        /*if (Yii::app()->user->isGuest) {

            $user = Usuarios::model()->findByAttributes(array('email'=>$_POST['email_rem']));

            // se o usuário existe
            if (!empty($user)) {

                // se foi enviada senha
                if (isset($_POST['senha']) && !empty($_POST['senha'])) {

                    if (!CPasswordHelper::verifyPassword($_POST['senha'],$user->senha)) {
                        echo '-7';
                        exit;
                    }

                    // loga o user
                    $identity = new UserIdentity($_POST['email_rem'], $_POST['senha']);
                    if ($identity->authenticate()) {
                        $login = Yii::app()->user;
                        $login->login($identity);
                        $check_login = true;
                    }

                } else {
                    echo '-3';
                    exit;
                }
            }
        }*/

        // checar se não está logado e email ñ existir no banco, se não estiver, vamos criar o usuario
        /*if (Yii::app()->user->isGuest && !Usuarios::model()->exists('email=:email', array(':email' => $_POST['email_rem']))) {

            // criar um usuario do tipo pessoa Jurídica (somente empresas podem ter banners)
            $usuario = new Usuarios;
            $usuario->email = $_POST['email_rem'];
            $usuario->nome = $_POST['nome_rem'];
            $usuario->pessoa = 'F';
            $usuario->celular = Yii::app()->request->getPost('telefone_rem');
            $usuario->usuario_classificacoes_id = Anuncio::$_classificacoes_de_usuario['USUARIO'];

            // senha provisória
            $senha = $uniqid = substr(uniqid(rand(), true), 6, 6); // 6 characters long

            $usuario->senha = $senha;

            // se salvar, vamos enviar um email para o usuario
            if ($usuario->save()) {
                       $check_login = true;
                // gerar um objeto de esquecimento de senha (caso o usuario qeira alterar sua senha provisória)
                $token = md5(uniqid(rand(), true));
                $recSenha = new UsuariosRecuperacaoSenha;
                $recSenha->token = $token;
                $recSenha->usuarios_id = $usuario->id;

                // objeto de email
                $message = new YiiMailMessage;
                $message->view = "mail_novo_usuario";
                $message->subject = 'Bem Vindo - BomBarco';
                $message->setBody(array('usuario' => $usuario, 'senha' => $senha, 'token' => $token), 'text/html');
                $message->addTo($usuario->email);
                $message->from = Yii::app()->params['bombarcoAtendimento'];

                Yii::app()->mail->send($message);

                if ($recSenha->save()) {
                    $identity = new UserIdentity($usuario->email, $senha);
                    if ($identity->authenticate()) {
                        $user = Yii::app()->user;
                        // logar usuario e redirecionar para URL que gostaria de acessar antes de logar
                        $user->login($identity);
                        $check_login = true;
                    }
                }

                // erro
                else {
                    echo '-1';
                    exit;
                }
            }
        }*/

        // setar dados de contato
        $contato = new Contatos;
        $contato->setAttributes($_POST);

        $contato->data = date('Y-m-d H:i:s');
        $contato->usuarios_id_rem = Yii::app()->user->id;
        $contato->email_rem = $parser->purify($_POST['email_rem']);

        $empresa = Empresas::model()->find('usuarios_id=:usuarios_id', array(':usuarios_id' => $parser->purify($_POST['usuarios_id_dest']) ));
        if ($empresa == null) {
            echo '-1';
            exit;
        }

        if ($_POST['usuarios_id_dest'] == Yii::app()->user->id) {
            echo '-5';
            exit;
        }

        $contato->empresas_id = $empresa->id;
        // palavras chaves para achar a mensagem na busca
        $contato->palavras_chaves = $empresa->nomefantasia . ' ' . $empresa->nomefantasia . ' ' . $contato->nome_rem . ' ' . $contato->email_rem . ' ' . $contato->telefone_rem . ' ' . Utils::formatDateTimeToView($contato->data);

        if ($flgEstaleiro == 1) {

            $contato->tipo = Anuncio::$_tipo_contato['ESTALEIRO'];
            $contato->palavras_chaves .= ' estaleiro';
            // estaleiro
            $contato->email_dest = $parser->purify($_POST['email_empresa']);
            $contato->usuarios_id_dest = (int) $parser->purify($_POST['usuarios_id_dest']);

        } else {
            $contato->palavras_chaves .= ' guia';
            $contato->tipo = Anuncio::$_tipo_contato['GUIA_DE_EMPRESAS'];
            $contato->email_dest = $parser->purify($_POST['email_empresa']);
            $contato->usuarios_id_dest = (int) $parser->purify($_POST['usuarios_id_dest']);
        }

        // id vai conter o ID do usuario da empresa (achamos o usuario atraves do email da empresa)
        //$contato->usuarios_id = (int)$_POST['usuarios_id'];
        // nomefantasia da empresa
        $nomefantasia = $parser->purify($_POST['nomefantasia']);
        $mensagem = $parser->purify($_POST['mensagem']);

        if ($_POST['telefone_rem'] != "") {
            $mensagem .= ' ' . $parser->purify($_POST['telefone_rem']);
        }

        /* gambiarra para que a mensagem que cair no usuario destinatario, apareça em 1º */
        $c = Contatos::model()
                ->find('usuarios_id_dest=:usuarios_id_dest and usuarios_id_rem=:usuarios_id_rem and empresas_id=:empresas_id', array(':usuarios_id_dest' => $contato->usuarios_id_dest, ':usuarios_id_rem' => $contato->usuarios_id_rem, ':empresas_id' => $contato->empresas_id));


        if (count($c) > 0) {
            $c->data_do_titulo = $contato->data;
            $c->titulo_mensagem = $contato->mensagem;
            $c->update();
        }

        $contato->data_do_titulo = date('Y-m-d H:i:s');
        $contato->titulo_mensagem = $mensagem;

        // salvar e enviar email
        if ($contato->save()) {
            $message = new YiiMailMessage;
            //this points to the file test.php inside the view path
            if ($flgEstaleiro == 1) {

                $message->subject = 'Contato Estaleiro';
                $message->view = 'mail_contato_estaleiro';
                $message->addTo($parser->purify($_POST['email_empresa']));
                $mensagem .= ' - Email da pergunta: ' . $parser->purify($_POST['email_rem']);

                $c = Contatos::model()->findByPk($contato->id);
                $c->mensagem .= ' - Estaleiro contatado: ' . $parser->purify($nomefantasia) . ' / E-mail da pergunta: ' . $parser->purify($_POST['email_rem']);
                $c->update();

            } else {
                $message->subject = 'Contato Guia de Empresa';
                $message->view = 'mail_contato_empresa';
                $message->addTo($parser->purify($_POST['email_empresa']));
            }

            $message->setBody(array('nomefantasia' => $nomefantasia, 'mensagem' => $mensagem, 'id_contato' => $contato->id), 'text/html');
            $message->setReplyTo($parser->purify($_POST['email_rem']));
            $message->from = Yii::app()->params['bombarcoAtendimento'];
            $emails = array(Yii::app()->params['bombarcoAtendimento']);
            foreach ($emails as $value) {
                $message->addCC($value);
            }

            if (!Yii::app()->mail->send($message)) {
                echo '-1';
            } else {
                echo '1';
            }

        }

    }



    public function actionContatoEmpresaResposta() {

        $parser = new CHtmlPurifier();

        // post
        $email_remetente = $parser->purify($_POST['email_remetente']);
        $mensagem = $parser->purify($_POST['mensagem']);
        $email_destinatario = Usuarios::model()->findByPk($_POST['usuarios_id_dest'])->email;
        //$email_destinatario = $parser->purify($_POST['email_dest']);

        // verifica se o email de destino é um email que pertence a um estaleiro ou empresa
        // 1 - estaleiro
        // 0 - empresa
        $empresa = Empresas::model()->findByPk($parser->purify($_POST['empresas_id']));
        if ($empresa == null) {
            echo '-1';
            exit;
        }

        if ($empresa->macros_id == 3) {
            $flgEstaleiro = 1;
        } else {
            $flgEstaleiro = 0;
        }

       
        

        // setar dados de contato
        $contato = new Contatos;
        $contato->setAttributes($_POST);

        $contato->data = date('Y-m-d H:i:s');
        $contato->email_rem = $email_remetente;
        $contato->usuarios_id_rem = Yii::app()->user->id;

        $contato->empresas_id = $empresa->id;
        $contato->email_dest = $email_destinatario;
        $contato->usuarios_id_dest = (isset($_POST['usuarios_id_dest']) && !empty($_POST['usuarios_id_dest'])) ? $parser->purify($_POST['usuarios_id_dest']) : null;
        // palavras chaves para achar a mensagem na busca
        $contato->palavras_chaves = $empresa->razao . ' ' . $empresa->nomefantasia . ' ' . $contato->nome_rem . ' ' . $contato->email_rem . ' ' . $contato->telefone_rem . ' ' . Utils::formatDateTimeToView($contato->data);

        if ($flgEstaleiro == 1) {
            $contato->tipo = Anuncio::$_tipo_contato['ESTALEIRO'];
            $contato->palavras_chaves .= ' estaleiro';
            // estaleiro
            /*if (in_array($email_destinatario, Contatos::$emails_estaleiros)) {
                $contato->email_dest = $email_destinatario;
                $contato->usuarios_id_dest = $_POST['usuarios_id_dest'];
            } else {

                // estaleiros que o bombarco toma conta, enviar email para atendimento
                $contato->email_dest = Yii::app()->params['bombarcoAtendimento'];
                $contato->usuarios_id_dest = Usuarios::model()->find('email=:email', array(':email' => Yii::app()->params['bombarcoAtendimento']))->id;
            }*/

        }

        // empresa
        else {
            $contato->palavras_chaves .= ' guia';
            $contato->tipo = Anuncio::$_tipo_contato['GUIA_DE_EMPRESAS'];
        }


        /* gambiarra para que a mensagem que cair no usuario destinatario, apareça em 1º */
        $c = Contatos::model()->find('email_dest=:email_dest and usuarios_id_rem=:usuarios_id_rem and empresas_id=:empresas_id', array(':email_dest' => $contato->email_dest, ':usuarios_id_rem' => $contato->usuarios_id_rem, ':empresas_id' => $contato->empresas_id));
        if (count($c) > 0) {
            $c->data_do_titulo = $contato->data;
            $c->titulo_mensagem = $contato->mensagem;
            $c->update();
        }

        $contato->data_do_titulo = date('Y-m-d H:i:s');
        $contato->titulo_mensagem = $mensagem;

        /* aqui */


        // salvar e enviar email
        if ($contato->save()) {

            // enviar email para empresa
            $message = new YiiMailMessage;
            $message->view = "mail_empresa_resposta";
            if ($flgEstaleiro == 1) {
                $message->subject = 'Contato Estaleiro - Resposta';
            } else {
                $message->subject = 'Contato Guia de Empresa - Resposta';
            }

            $nome = '';

            // verificar se o estaleiro não é um estaleiro que deve ter a msg enviada
            // a propria caixa de entrada dos estaleiros
            if ($flgEstaleiro == 1) {
                if (in_array($email_destinatario, Contatos::$emails_estaleiros)) {
                    $message->addTo($email_destinatario);
                    $nome = Usuarios::model()->find('email=:email', array(':email' => $email_destinatario))->nome;
                } else {
                    // estaleiros que o bombarco toma conta, enviar email para atendimento
                    $message->addTo(Yii::app()->params['bombarcoAtendimento']);
                    $nome = 'Admin';
                }
            }

            // vai pro email da empresa se n for estaleiro
            else {
                $message->addTo($email_destinatario);
                $nome = Usuarios::model()->find('email=:email', array(':email' => $email_destinatario))->nome;
            }

            // remetente
            $message->from = Yii::app()->params['bombarcoAtendimento'];
            $message->setReplyTo($email_remetente);
            $message->setBody(array('mensagem' => $mensagem, 'id_contato' => $contato->id, 'nome' => $nome, 'id_customer' => $contato->usuarios_id_dest), 'text/html');

            // cópia para atendimento
            $emails = array(Yii::app()->params['bombarcoAtendimento']);
            foreach ($emails as $value) {
                $message->addCC($value);
            }

            // envia msg
            if (!Yii::app()->mail->send($message)) {
                echo '-1';
            } else {
                echo '1';
            }
        }
    }



    // enviar email para atendimento bombarco e um para o usuario avisando que
    // a embarcação não encontrada na tabela.....
    public function actionContatoTabelaBombarcoNaoEncontrou() {

        $parser = new CHtmlPurifier();

        if (isset($_POST)) {

            // dados do post
            $nome = $parser->purify(Yii::app()->request->getPost('nome'));
            $email = $parser->purify(Yii::app()->request->getPost('email'));
            $telefone = $parser->purify(Yii::app()->request->getPost('telefone'));
            $descricao = $parser->purify(Yii::app()->request->getPost('descricao'));

            if (empty($nome) || empty($email) || empty($telefone) || empty($descricao)) {
                echo '-1';
                exit();
            }

            // enviar email para admin e um email para o usuario
            // email para o admin contendo a msg do usuario
            $message = new YiiMailMessage;
            $message->view = "mail_tabela_bombarco";
            $message->subject = 'Tabela BomBarco';
            $message->setBody(array('nome' => $nome, 'email' => $email, 'telefone' => $telefone, 'mensagem' => $descricao), 'text/html');
            $message->addTo("atendimento@bombarco.com.br");
            $message->from = Yii::app()->params['bombarcoAtendimento'];
            $message->setReplyTo($email);

            if (!Yii::app()->mail->send($message)) {
                echo '-1';
                exit();
            }

            // email para o usuario contendo uma msg que o email foi enviado
            // e que alguém entrará em contato
            $message2 = new YiiMailMessage;
            $message2->view = "mail_automatico_resposta";
            $message2->subject = 'E-mail Automático';
            $message2->setBody(array('nome' => $nome), 'text/html');
            $message2->addTo($email);
            $message2->from = Yii::app()->params['bombarcoAtendimento'];

            if (!Yii::app()->mail->send($message2)) {
                echo '-1';
                exit();
            }

        }
    }



    // enviar email e criar usuario quando o usuario clica em buscar na tabela bombarco e não está logado
    public function actionContatoTabelaBombarcoBusca() {

        // Honeypot
        /*if (!isset($_POST['j8BSVuvy']) || !empty($_POST['j8BSVuvy'])) {
            echo '-1';
            exit();
        }*/

        // checar se não está logado e email ñ existir no banco, se não estiver, vamos criar o usuario
        if (Yii::app()->user->isGuest && !Usuarios::model()->exists('email=:email', array(':email' => $_POST['email']))) {

            // criar um usuario
            $usuario = new Usuarios;
            $usuario->email_rem = $_POST['email'];
            $usuario->pessoa = 'F';
            $usuario->usuario_classificacoes_id = Anuncio::$_classificacoes_de_usuario['USUARIO'];

            // senha provisória
            $senha = $uniqid = substr(uniqid(rand(), true), 6, 6); // 10 characters long

            $usuario->senha = $senha;

            // se salvar, vamos enviar um email para o usuario
            if ($usuario->save()) {

                // gerar um objeto de esquecimento de senha (caso o usuario qeira alterar sua senha provisória)
                $token = md5(uniqid(rand(), true));
                $recSenha = new UsuariosRecuperacaoSenha;
                $recSenha->token = $token;
                $recSenha->usuarios_id = $usuario->id;

                // objeto de email
                $message = new YiiMailMessage;
                $message->view = "mail_novo_usuario";
                $message->subject = 'Bem Vindo - BomBarco';
                $message->setBody(array('usuario' => $usuario, 'senha' => $senha, 'token' => $token), 'text/html');
                $message->addTo($usuario->email);
                $message->from = Yii::app()->params['bombarcoAtendimento'];

                if ($recSenha->save()) {
                    // envia msg
                    if (!Yii::app()->mail->send($message)) {

                        // erro
                        echo '-1';
                    } else {

                        $identity = new UserIdentity($usuario->email, $senha);
                        if ($identity->authenticate()) {
                            $user = Yii::app()->user;

                            // logar usuario e redirecionar para URL que gostaria de acessar antes de logar
                            $user->login($identity);
                            //$this->redirect(Yii::app()->homeUrl);
                            echo '1';
                        }
                    }
                }

                // erro
                else {
                    echo '-1';
                }
            }
        }
    }

    // enviar email do form de contato do /comunidade/agenda
    public function actionContatoAgenda() {

        // Honeypot
        /*if (!isset($_POST['j8BSVuvy']) || !empty($_POST['j8BSVuvy'])) {
            echo '-1';
            exit();
        }*/

        // enviar msg de contato para o admin
        // setar dados de contato
        $contato = new Contatos;
        $contato->setAttributes($_POST);
        $contato->data = date('Y-m-d H:i:s');
        $contato->email_dest = 'atendimento@bombarco.com.br';
        $contato->tipo = 'A';

        // salvar e enviar email
        if ($contato->save()) {

            // enviar email para admin a respeito do contato
            $message = new YiiMailMessage;
            $message->view = "mail_agenda_admin";
            $message->subject = 'Contato - Agenda';
            $message->setBody(array('email' => $_POST['email'], 'mensagem' => $_POST['mensagem'], 'empresa' => $_POST['empresa']), 'text/html');
            $message->addTo("atendimento@bombarco.com.br");
            $message->from = Yii::app()->params['bombarcoAtendimento'];
            $message->setReplyTo($_POST['email']);

            // envia msg
            if (!Yii::app()->mail->send($message)) {

                // erro
                echo '-1';
            }

            // msg enviada ok
            else {
                echo '1';
            }
        }


        // erro ao salvar o contato
        else {
            echo '-1';
        }
    }

    // E-mail de contato para o anunciante
    // echo -1 => erro enviar email
    // echo -3 => tentou usar um email que já existe sem estar logado
    // echo -5 => tentou enviar a mensagem a si mesmo
    // echo -7 => usuário existe, digitou senha, mas é inválida
    // echo 1 => OK
    public function actionMailAnunciante() {

        $parser = new CHtmlPurifier();

        // Honeypot
        if (!isset($_POST['j8BSVuvy']) || !empty($_POST['j8BSVuvy'])) {
            echo '-1';
            exit();
        }

        $check_login = false;

        if (isset($_POST)) {

            // usuário ja existe e outra pessoa tentou logar com o email
            /*if (Yii::app()->user->isGuest) {

                $user = Usuarios::model()->findByAttributes(array('email'=>$_POST['email_remetente']));

                // se o usuário existe
                if (!empty($user)) {

                    // se foi enviada senha
                    if (isset($_POST['senha']) && !empty($_POST['senha'])) {

                        if (!CPasswordHelper::verifyPassword($_POST['senha'],$user->senha)) {
                            echo '-7';
                            exit;
                        }

                        // loga o user
                        $identity = new UserIdentity($_POST['email_remetente'], $_POST['senha']);
                        if ($identity->authenticate()) {
                            $login = Yii::app()->user;
                            $login->login($identity);
                            $check_login = true;
                        }

                    } else {
                        echo '-3';
                        exit;
                    }
                }
            }*/

            // checar se não está logado e email ñ existir no banco, se não estiver, vamos criar o usuario
            /*if (Yii::app()->user->isGuest && !Usuarios::model()->exists('email=:email', array(':email' => $_POST['email_remetente']))) {

                // criar um usuario
                $usuario = new Usuarios;
                $usuario->email = $_POST['email_remetente'];
                $usuario->nome = $_POST['nome_rem'];
                $usuario->pessoa = 'F';
                $usuario->celular = Yii::app()->request->getPost('telefone_rem');
                $usuario->usuario_classificacoes_id = Anuncio::$_classificacoes_de_usuario['USUARIO'];

                // senha provisória
                $senha = $uniqid = substr(uniqid(rand(), true), 6, 6); // 10 characters long
                $usuario->senha = $senha;


                // se salvar, vamos enviar um email para o usuario
                if ($usuario->save()) {
                    $check_login = true;
                    // gerar um objeto de esquecimento de senha (caso o usuario qeira alterar sua senha provisória)
                    $token = md5(uniqid(rand(), true));
                    $recSenha = new UsuariosRecuperacaoSenha;
                    $recSenha->token = $token;
                    $recSenha->usuarios_id = $usuario->id;

                    // objeto de email
                    $message = new YiiMailMessage;
                    $message->view = "mail_novo_usuario";
                    $message->subject = 'Bem Vindo - BomBarco';
                    $message->setBody(array('usuario' => $usuario, 'senha' => $senha, 'token' => $token), 'text/html');
                    $message->addTo($usuario->email);
                    $message->from = Yii::app()->params['bombarcoAtendimento'];

                    if ($recSenha->save()) {
                        // envia msg
                        if (!Yii::app()->mail->send($message)) {

                            // erro
                            echo '-1';
                        } else {

                            $identity = new UserIdentity($usuario->email, $senha);
                            if ($identity->authenticate()) {
                                $user = Yii::app()->user;
                                // logar usuario e redirecionar para URL que gostaria de acessar antes de logar
                                $user->login($identity);
                            }
                        }
                    }

                    // erro
                    else {
                        echo '-1';
                        exit;
                    }
                }
            }*/


            /*=========================================
            =            Envio da pergunta            =
            =========================================*/

            $email_remetente = $parser->purify($_POST['email_remetente']);
            $nome = $parser->purify($_POST['nome_rem']);
            $nome_destinatario = $parser->purify($_POST['nome_destinatario']);
            $mensagem = $parser->purify($_POST['mensagem']);
            $idEmbarcacao = (int) $parser->purify($_POST['idEmbarcacao']);
            $idUsuarioDonoEmbarc = (isset($_POST['idUsuarioDonoEmbarc']) && !empty($_POST['idUsuarioDonoEmbarc'])) ? (int) $parser->purify($_POST['idUsuarioDonoEmbarc']) : null;
            $email_destinatario = $parser->purify($_POST['emailEmbarcacao']);
            $telefone = '';
            if (isset($_POST['telefone_rem']))
                $telefone = $parser->purify($_POST['telefone_rem']);

            if ($idUsuarioDonoEmbarc == Yii::app()->user->id) {
                echo '-5';
                exit;
            }

            // indica que é uma resposta do anunciante
            $flgResposta = false;
            if (isset($_POST['resposta']))
                $flgResposta = true;

            // marca modelo da embarc para por no subject do email
            $embarcacao = Embarcacoes::model()->findByPk($idEmbarcacao);

            $contato = new Contatos;
            $contato->email_rem = $email_remetente;
            $contato->nome_rem = $nome;
            $contato->mensagem = $mensagem;
            $contato->data = date('Y-m-d H:i:s');
            $contato->usuarios_id_rem = (isset(Yii::app()->user->id) && !empty(Yii::app()->user->id)) ? Yii::app()->user->id : null;
            $contato->usuarios_id_dest = $idUsuarioDonoEmbarc;
            $contato->telefone_rem = $telefone;
            $contato->embarcacoes_id = $idEmbarcacao;
            $contato->data_do_titulo = date('Y-m-d H:i:s');
            $contato->titulo_mensagem = $mensagem;
            // palavras chaves para achar a mensagem na busca
            $contato->palavras_chaves = $embarcacao->embarcacaoModelos->embarcacaoFabricantes->titulo . ' ' . $embarcacao->embarcacaoModelos->titulo . ' ' . $contato->nome_rem . ' ' . $contato->email_rem . ' ' . $contato->telefone_rem . ' ' . Utils::formatDateTimeToView($contato->data);

            if ($embarcacao->macros_id != 3) {
                // tipo de contato classificado
                $contato->tipo = Anuncio::$_tipo_contato['EMBARCACAO_CLASSIFICADO'];
                $contato->palavras_chaves .= ' classificado';
            } else {
                // tipo de contato estaleiro
                $contato->tipo = Anuncio::$_tipo_contato['EMBARCACAO_CATALOGO'];
                $contato->palavras_chaves .= ' catalogo';
            }
            $contato->email_dest = $email_destinatario;

            /* gambiarra para que a mensagem que cair no usuario destinatario, apareça em 1º */
            $c = Contatos::model()->find('usuarios_id_dest=:usuarios_id_dest and usuarios_id_rem=:usuarios_id_rem and embarcacoes_id=:embarcacoes_id', array(':usuarios_id_dest' => $contato->usuarios_id_dest, ':usuarios_id_rem' => $contato->usuarios_id_rem, ':embarcacoes_id' => $contato->embarcacoes_id));
            if (count($c) > 0) {
                $c->data_do_titulo = $contato->data;
                $c->titulo_mensagem = $contato->mensagem;
                $c->update();
            }
            
            
        

            if ($contato->save()) {

                $message = new YiiMailMessage;

                // usuario dono da embarc
                //$usuario = Usuarios::model()->findByPk($idUsuarioDonoEmbarc);

                // se for resposta, mudar a view, para a view de resposta
                if ($_POST['resposta'] == 1) {
                    $message->view = "mail_anunciante_resposta";
                } else {
                    $message->view = "mail_anunciante";
                }

                if ($embarcacao->macros_id == 3) {
                    $message->subject = 'Contato Embarcação de Estaleiro - ' . $embarcacao->embarcacaoModelos->embarcacaoFabricantes->titulo . ' ' . $embarcacao->embarcacaoModelos->titulo;
                } else {
                    $message->subject = 'Contato Embarcação Classificado - ' . $embarcacao->embarcacaoModelos->embarcacaoFabricantes->titulo . ' ' . $embarcacao->embarcacaoModelos->titulo;
                    $message->addTo("bombarcoadm@gmail.com");
                }

                $message->setBody(
                    array(
                        'nome_destinatario' => $nome_destinatario,
                        'mensagem' => $mensagem,
                        'id_contato' => $contato->id,
                        'marca' => $embarcacao->embarcacaoModelos->embarcacaoFabricantes->titulo,
                        'telefone' => $telefone,
                        'modelo' => $embarcacao->embarcacaoModelos->titulo,
                        'id_customer' => $idUsuarioDonoEmbarc,
                        'link' => Embarcacoes::mountUrl($embarcacao)
                    ),
                    'text/html');
                $message->addTo($email_destinatario);

                $message->from = Yii::app()->params['bombarcoAtendimento'];
                $message->addTo("atendimento@bombarco.com.br");
                $message->setReplyTo($parser->purify($_POST['email_remetente']));

                if (!Yii::app()->mail->send($message)) {
                    echo '-1';
                    exit();
                }


                /*===============================
                =            Financiamento                    =
                ===============================*/

                if (isset($_POST['partner_finan']) && intval($_POST['partner_finan']) === 1) {

                    $params_partner = array(
                        'name' => $nome,
                        'email' => $email_remetente,
                        'phone' => $telefone,
                        'id' => $idEmbarcacao,
                        'title' => $embarcacao->embarcacaoModelos->embarcacaoFabricantes->titulo . ' ' . $embarcacao->embarcacaoModelos->titulo,
                        'price' => Utils::formataValorView((float) $embarcacao->valor),
                        'partner' => 'Alfa Financeira',
                        'link' => Embarcacoes::mountUrl($embarcacao)
                    );

                    // enviar email para admin a respeito do contato
                    $partner = new YiiMailMessage;
                    $partner->view = "mail_partner";
                    $partner->subject = 'Contato Parceiro - Alfa Financeira';
                    $partner->setBody($params_partner, 'text/html');

                    $partner->addTo("laura.irabi@bancoalfa.com.br");
                    $partner->addTo("ecaldeira@bancoalfa.com.br");
                    $partner->addTo("atendimento@bombarco.com.br");
                    #$partner->addTo("andreluizrodper@gmail.com");
                    $partner->addTo("bombarcoadm@gmail.com");
                    $partner->from = 'atendimento3@bombarco.com.br';

                    // envia msg
                    if (!Yii::app()->mail->send($partner)) {
                        echo '-1';
                        exit();
                    }

                }

                /*-----  End of Financiamento       ------*/


                /*=================================
                =            Consorcio            =
                =================================*/

                if (isset($_POST['partner_cons']) && intval($_POST['partner_cons']) === 1) {

                    $params_partner2 = array(
                        'name' => $nome,
                        'email' => $email_remetente,
                        'phone' => $telefone,
                        'id' => $idEmbarcacao,
                        'title' => $embarcacao->embarcacaoModelos->embarcacaoFabricantes->titulo . ' ' . $embarcacao->embarcacaoModelos->titulo,
                        'price' => Utils::formataValorView((float) $embarcacao->valor),
                        'partner' => 'Unifisa',
                        'link' => Embarcacoes::mountUrl($embarcacao)
                    );

                    // enviar email para admin a respeito do contato
                    $partner2 = new YiiMailMessage;
                    $partner2->view = "mail_partner";
                    $partner2->subject = 'Contato Parceiro - Unifisa';
                    $partner2->setBody($params_partner2, 'text/html');

                    $partner2->addTo(Yii::app()->params['parceiroConsorcio']);
                    $partner2->addTo("atendimento@bombarco.com.br");
                    #$partner2->addTo("andreluizrodper@gmail.com");
                    $partner2->addTo("marketing@unifisa.com.br");
                    $partner2->addTo("bombarco@consorciounifisa.com.br");
                    $partner2->addTo("bombarcoadm@gmail.com");
                    $partner2->from = 'atendimento3@bombarco.com.br';

                    // envia msg
                    if (!Yii::app()->mail->send($partner2)) {
                        echo '-1';
                        exit();
                    }

                }

                /*-----  End of Consorcio  ------*/


                if ($check_login) {
                    echo '2';
                    exit();
                } else {
                    echo '1';
                    exit();
                }

            } else {
                echo '-1';
                exit;
            }

            /*-----  End of Envio da pergunta  ------*/

        }
    }

    public function actionCreate() {
        $model = new Contatos;


        if (isset($_POST['Contatos'])) {
            $model->setAttributes($_POST['Contatos']);

            if ($model->save()) {
                if (Yii::app()->getRequest()->getIsAjaxRequest())
                    Yii::app()->end();
                else
                    $this->redirect(array('view', 'id' => $model->id));
            }
        }

        $this->render('create', array('model' => $model));
    }

    public function actionUpdate($id) {
        $model = $this->loadModel($id, 'Contatos');


        if (isset($_POST['Contatos'])) {
            $model->setAttributes($_POST['Contatos']);

            if ($model->save()) {
                $this->redirect(array('view', 'id' => $model->id));
            }
        }

        $this->render('update', array(
            'model' => $model,
        ));
    }

    public function actionDelete($id) {
        if (Yii::app()->getRequest()->getIsPostRequest()) {
            $this->loadModel($id, 'Contatos')->delete();

            if (!Yii::app()->getRequest()->getIsAjaxRequest())
                $this->redirect(array('admin'));
        } else
            throw new CHttpException(400, Yii::t('app', 'Your request is invalid.'));
    }

    public function actionMensagens() {

        $model = new Contatos('search');
        $model->unsetAttributes();

        if (isset($_GET['Contatos'])) {
            $model->setAttributes($_GET['Contatos']);
        }


        $this->render('admin', array(
            'model' => $model,
        ));
    }


    /**
     * Email para parceiros
     * @return [type] [description]
     */
    public function actionPartners() {

        $parser = new CHtmlPurifier();

        // Honeypot
        if (!isset($_POST['C7RiUSGm']) || !empty($_POST['C7RiUSGm']))
            throw new Exception(0);

        $res = array(
            'error' => 0,
            'msg' => 'Contato enviado',
            'ok' => true,
        );

        if (!isset($_POST['finan_email']) || empty($_POST['finan_email'])) {
            $res['error'] = 1;
            $res['msg'] = 'Digite seu email';
            echo json_encode($res);
            exit;
        }

        $params = array(
                        'name' => $parser->purify($_POST['finan_nome']),
                        'email' => $parser->purify($_POST['finan_email']),
                        'phone' => $parser->purify($_POST['finan_phone']),
                        'id' => $parser->purify($_POST['finan_id']),
                        'title' => $parser->purify($_POST['finan_titulo']),
                        'price' => $parser->purify($_POST['finan_valor']),
                        'partner' => $parser->purify($_POST['finan_parceiro']),
                        'link' => $parser->purify($_POST['finan_link'])
                        );

        // enviar email para admin a respeito do contato
        $message = new YiiMailMessage;
        $message->view = "mail_partner";
        $message->subject = 'Contato Parceiro';
        $message->setBody($params, 'text/html');
        $message->addTo("bombarcoadm@gmail.com");
        $message->addTo("atendimento@bombarco.com.br");
        if ($_POST['partner_type'] === 'finan') { // tipo Financeiro
            $message->addTo(Yii::app()->params['parceiroFinanciamento']);
            $message->addTo("ecaldeira@bancoalfa.com.br");
            $message->addTo("laura.irabi@bancoalfa.com.br");
        } else if ($_POST['partner_type'] === 'cons') { // tipo Consórcio
            $message->addTo(Yii::app()->params['parceiroConsorcio']);
            $message->addTo("marketing@unifisa.com.br");
            $message->addTo("bombarco@consorciounifisa.com.br");

        } else {
            $res['error'] = 3;
            $res['ok'] = false;
            $res['msg'] = 'Tipo de parceiro inválido';
        }

        //$message->from = $_POST['finan_email'];
        $message->from = 'atendimento3@bombarco.com.br';
        //$message->addCC(Yii::app()->params['bombarcoAtendimento']);

        // envia msg
        if (!Yii::app()->mail->send($message)) {
            $res['error'] = 2;
            $res['ok'] = false;
            $res['msg'] = 'Contato não enviado!';
        }

        // Auto resposta
        $response = new YiiMailMessage;
        $response->from = 'atendimento3@bombarco.com.br';
        $response->addTo($parser->purify($_POST['finan_email']));
        $response->subject = 'Obrigado pelo Contato';
        $response->view = "mail_parceiro_resposta";
        $response->setBody($params, 'text/html');

        if (!Yii::app()->mail->send($response)) {
            $res['error'] = 2;
            $res['ok'] = false;
            $res['msg'] = 'Contato não enviado!';
        }

        echo json_encode($res);
        exit;
    }




    /**
     * Email para um parceiro específico, dentro da área dele
     * @return [type] [description]
     */
    public function actionPartner() {

        $parser = new CHtmlPurifier();

        // Honeypot
        if (!isset($_POST['PuUK8SmP']) || !empty($_POST['PuUK8SmP']))
            throw new Exception(0);

        $res = array(
            'error' => 0,
            'msg' => 'Contato enviado',
            'ok' => true,
        );

        try {

            if (!isset($_POST['email']) || empty($_POST['email']))
                throw new Exception("Digite seu email", 1);

            $params = array(
                        'name' => $parser->purify($_POST['name']),
                        'email' => $parser->purify($_POST['email']),
                        'phone' => $parser->purify($_POST['phone']),
                        'price' => $parser->purify($_POST['price']),
                        'partner' => $parser->purify($_POST['partner']),
                        'type' => $parser->purify($_POST['type']),
                        'pes_min' => $parser->purify($_POST['pes-min']),
                        'pes_max' => $parser->purify($_POST['pes-max']),
                        'type_partner' => $parser->purify($_POST['type_partner'])
                );

            // checar se não está logado e email ñ existir no banco, se não estiver, vamos criar o usuario
            /*if (Yii::app()->user->isGuest && !Usuarios::model()->exists('email=:email', array(':email' => $_POST['email']))) {

                // criar um usuario
                $usuario = new Usuarios;
                $usuario->email = $_POST['email'];
                $usuario->nome = $_POST['name'];
                $usuario->pessoa = 'F';
                $usuario->celular = Yii::app()->request->getPost('phone');
                $usuario->usuario_classificacoes_id = Anuncio::$_classificacoes_de_usuario['USUARIO'];

                // senha provisória
                $senha = $uniqid = substr(uniqid(rand(), true), 6, 6); // 10 characters long

                $usuario->senha = $senha;

                // se salvar, vamos enviar um email para o usuario
                if ($usuario->save()) {

                    // gerar um objeto de esquecimento de senha (caso o usuario qeira alterar sua senha provisória)
                    $token = md5(uniqid(rand(), true));
                    $recSenha = new UsuariosRecuperacaoSenha;
                    $recSenha->token = $token;
                    $recSenha->usuarios_id = $usuario->id;

                    // objeto de email
                    $message = new YiiMailMessage;
                    $message->view = "mail_novo_usuario";
                    $message->subject = 'Bem Vindo - BomBarco';
                    $message->setBody(array('usuario' => $usuario, 'senha' => $senha, 'token' => $token), 'text/html');
                    $message->addTo($usuario->email);
                    $message->from = Yii::app()->params['bombarcoAtendimento'];

                    if (!$recSenha->save())
                        throw new Exception("Erro ao salvar usuário", 2);

                    if (!Yii::app()->mail->send($message))
                        throw new Exception("Erro ao enviar contato", 1);

                    $identity = new UserIdentity($usuario->email, $senha);
                    if ($identity->authenticate()) {
                        $user = Yii::app()->user;
                        $user->login($identity);
                    }
                }

            }*/

            // enviar email para admin a respeito do contato
            $message = new YiiMailMessage;
            $message->view = "mail_partner_detail";
            $message->subject = 'Contato Parceiro';
            $message->setBody($params, 'text/html');
            $message->addTo("bombarcoadm@gmail.com");
            $message->addTo("atendimento@bombarco.com.br");

            if ($_POST['type_partner'] == 'F') { // tipo Financeiro
                $message->addTo(Yii::app()->params['parceiroFinanciamento']);
                $message->addTo("laura.irabi@bancoalfa.com.br");
                $message->addTo("ecaldeira@bancoalfa.com.br");
            } else if ($_POST['type_partner'] == 'C') { // tipo Consórcio
                $message->addTo(Yii::app()->params['parceiroConsorcio']);
                $message->addTo("marketing@unifisa.com.br");
                $message->addTo("bombarco@consorciounifisa.com.br");
            } else {
                throw new Exception("Tipo de parceiro inválido", 1);
            }

            $message->from = Yii::app()->params['bombarcoAtendimento'];
            //$message->addCC(Yii::app()->params['bombarcoAtendimento']);

            if (!Yii::app()->mail->send($message))
                throw new Exception("Contato não enviado!", 1);

            // Auto resposta
            $response = new YiiMailMessage;
            $response->from = "atendimento3@bombarco.com.br";
            $response->addTo($parser->purify($_POST['email']));
            $response->subject = 'Obrigado pelo Contato';
            $response->view = "mail_parceiro_resposta";
            $response->setBody($params, 'text/html');

            if (!Yii::app()->mail->send($response))
                throw new Exception("Contato não enviado!", 1);

        } catch (Exception $e) {
            $res['error'] = $e->getCode();
            $res['msg'] = $e->getMessage();
            $res['ok'] = false;
        }

        echo json_encode($res);
        exit;
    }

}
