<?php

/**
 * This is the model base class for the table "conteudos".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Conteudos".
 *
 * Columns in table "conteudos" available as properties of the model,
 * followed by relations of table "conteudos" available as properties of the model.
 *
 * @property integer $id
 * @property string $macro
 * @property string $titulo
 * @property string $texto
 * @property string $facebook
 * @property string $video
 * @property integer $status
 * @property integer $conteudo_categorias_id
 * @property integer $usuarios_id
 * @property integer $embarcacoes_id
 * @property integer $macros_id
 * @property integer $embarcacao_macros_id
 * @property string $slug
 * @property string $data
 *
 * @property ConteudoImagens[] $conteudoImagens
 * @property ConteudoSeo[] $conteudoSeos
 * @property ConteudoCategorias $conteudoCategorias
 * @property EmbarcacaoMacros $embarcacaoMacros
 * @property Embarcacoes $embarcacoes
 * @property Macros $macros
 * @property Usuarios $usuarios
 */
abstract class BaseConteudos extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'conteudos';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Conteudos|Conteudoses', $n);
	}

	public static function representingColumn() {
		return 'macro';
	}

	public function rules() {
		return array(
			array('macro, titulo, slug, data', 'required'),
			array('status, conteudo_categorias_id, usuarios_id, embarcacoes_id, macros_id, embarcacao_macros_id', 'numerical', 'integerOnly'=>true),
			array('macro', 'length', 'max'=>1),
			array('titulo, facebook, slug', 'length', 'max'=>500),
			array('texto, video', 'safe'),
			array('texto, facebook, video, status, usuarios_id, embarcacoes_id, macros_id, embarcacao_macros_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, macro, titulo, texto, facebook, video, status, conteudo_categorias_id, usuarios_id, embarcacoes_id, macros_id, embarcacao_macros_id, slug, data', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'conteudoImagens' => array(self::HAS_MANY, 'ConteudoImagens', 'conteudos_id'),
			'conteudoSeos' => array(self::HAS_MANY, 'ConteudoSeo', 'conteudos_id'),
			'conteudoCategorias' => array(self::BELONGS_TO, 'ConteudoCategorias', 'conteudo_categorias_id'),
			'embarcacaoMacros' => array(self::BELONGS_TO, 'EmbarcacaoMacros', 'embarcacao_macros_id'),
			'embarcacoes' => array(self::BELONGS_TO, 'Embarcacoes', 'embarcacoes_id'),
			'macros' => array(self::BELONGS_TO, 'Macros', 'macros_id'),
			'usuarios' => array(self::BELONGS_TO, 'Usuarios', 'usuarios_id'),
			'tags' => array(self::MANY_MANY, 'Tags', 'conteudos_has_tags(conteudos_id, tags_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'tags' => 'ConteudosHasTags',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'macro' => Yii::t('app', 'Macro'),
			'titulo' => Yii::t('app', 'Titulo'),
			'texto' => Yii::t('app', 'Texto'),
			'facebook' => Yii::t('app', 'Facebook'),
			'video' => Yii::t('app', 'Video'),
			'status' => Yii::t('app', 'Status'),
			'conteudo_categorias_id' => null,
			'usuarios_id' => null,
			'embarcacoes_id' => null,
			'macros_id' => null,
			'embarcacao_macros_id' => null,
			'slug' => Yii::t('app', 'Slug'),
			'data' => Yii::t('app', 'Data'),
			'conteudoImagens' => null,
			'conteudoSeos' => null,
			'conteudoCategorias' => null,
			'embarcacaoMacros' => null,
			'embarcacoes' => null,
			'macros' => null,
			'usuarios' => null,
			'tags' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('macro', $this->macro, true);
		$criteria->compare('titulo', $this->titulo, true);
		$criteria->compare('texto', $this->texto, true);
		$criteria->compare('facebook', $this->facebook, true);
		$criteria->compare('video', $this->video, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('conteudo_categorias_id', $this->conteudo_categorias_id);
		$criteria->compare('usuarios_id', $this->usuarios_id);
		$criteria->compare('embarcacoes_id', $this->embarcacoes_id);
		$criteria->compare('macros_id', $this->macros_id);
		$criteria->compare('embarcacao_macros_id', $this->embarcacao_macros_id);
		$criteria->compare('slug', $this->slug, true);
		$criteria->compare('data', $this->data, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}