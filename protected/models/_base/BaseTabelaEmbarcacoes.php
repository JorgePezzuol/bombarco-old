<?php

/**
 * This is the model base class for the table "tabela_embarcacoes".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TabelaEmbarcacoes".
 *
 * Columns in table "tabela_embarcacoes" available as properties of the model,
 * followed by relations of table "tabela_embarcacoes" available as properties of the model.
 *
 * @property integer $id
 * @property integer $ano
 * @property string $valor
 * @property integer $status
 * @property integer $embarcacao_modelos_id
 * @property integer $embarcacao_fabricantes_id
 * @property integer $embarcacao_macros_id
 * @property integer $pes
 * @property integer $qtdemotores
 * @property string $potenciamotor
 * @property integer $motor_tipos_id
 *
 * @property MotorTipos $motorTipos
 * @property EmbarcacaoFabricantes $embarcacaoFabricantes
 * @property EmbarcacaoModelos $embarcacaoModelos
 */
abstract class BaseTabelaEmbarcacoes extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tabela_embarcacoes';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TabelaEmbarcacoes|TabelaEmbarcacoes', $n);
	}

	public static function representingColumn() {
		return 'valor';
	}

	public function rules() {
		return array(
			array('ano, status, embarcacao_modelos_id, embarcacao_fabricantes_id, embarcacao_macros_id, qtdemotores, motor_tipos_id, motor_fabricantes_id, motor_modelos_id', 'numerical', 'integerOnly'=>true),
			array('valor', 'length', 'max'=>50),
			array('potenciamotor', 'length', 'max'=>40),
			array('ano, valor, status, embarcacao_modelos_id, embarcacao_fabricantes_id, embarcacao_macros_id, pes, qtdemotores, potenciamotor, motor_tipos_id, motor_fabricantes_id, motor_modelos_id, motorizacao', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, ano, valor, status, embarcacao_modelos_id, embarcacao_fabricantes_id, embarcacao_macros_id, pes, qtdemotores, potenciamotor, motor_tipos_id, motor_fabricantes_id, motor_modelos_id, motorizacao', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'motorTipos' => array(self::BELONGS_TO, 'MotorTipos', 'motor_tipos_id'),
			'motorFabricantes' => array(self::BELONGS_TO, 'MotorFabricantes', 'motor_fabricantes_id'),
			'motorModelos' => array(self::BELONGS_TO, 'MotorModelos', 'motor_modelos_id'),
			'embarcacaoModelos' => array(self::BELONGS_TO, 'EmbarcacaoModelos', 'embarcacao_modelos_id'),
			'embarcacaoFabricantes' => array(self::BELONGS_TO, 'EmbarcacaoFabricantes', 'embarcacao_fabricantes_id'),
			'embarcacaoMacros'=>array(self::BELONGS_TO, 'EmbarcacaoMacros', 'embarcacao_macros_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'ano' => Yii::t('app', 'Ano'),
			'motorizacao' => Yii::t('app', 'Motorizacao'),
			'valor' => Yii::t('app', 'Valor'),
			'status' => Yii::t('app', 'Status'),
			'embarcacao_modelos_id' => null,
			'embarcacao_fabricantes_id' => Yii::t('app', 'Fabricante'),
			'embarcacao_macros_id' => Yii::t('app', 'Tipo'),
			'pes' => Yii::t('app', 'Pes'),
			'qtdemotores' => Yii::t('app', 'Qtdemotores'),
			'potenciamotor' => Yii::t('app', 'PotÃªncia'),
			'motor_tipos_id' => Yii::t('app', 'Tipo do Motor'),
			'motorTipos' => Yii::t('app', 'Tipo do Motor'),
			'motor_fabricantes_id' => Yii::t('app', 'Marca Motor'),
			'motorFabricantes' => Yii::t('app', 'Fabricante do Motor'),
			'motor_modelos_id' => Yii::t('app', 'Modelo Motor'),
			'motorModelos' => Yii::t('app', 'Modelo Motor'),
			'embarcacaoFabricantes' => Yii::t('app', 'Fabricante'),
			'embarcacaoModelos' => Yii::t('app', 'Fabricante'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;
		$criteria->condition = "status = 1";
		$criteria->compare('id', $this->id);
		$criteria->compare('ano', $this->ano);
		$criteria->compare('valor', $this->valor, true);
		//$criteria->compare('status', $this->status);
		$criteria->compare('embarcacao_modelos_id', $this->embarcacao_modelos_id);
		$criteria->compare('embarcacao_fabricantes_id', $this->embarcacao_fabricantes_id);
		$criteria->compare('embarcacao_macros_id', $this->embarcacao_macros_id);
		$criteria->compare('pes', $this->pes);
		$criteria->compare('qtdemotores', $this->qtdemotores);
		$criteria->compare('potenciamotor', $this->potenciamotor, true);
		$criteria->compare('motor_tipos_id', $this->motor_tipos_id);
		$criteria->compare('motor_fabricantes_id', $this->motor_fabricantes_id);
		$criteria->compare('motor_modelos_id', $this->motor_modelos_id);
		$criteria->compare('motorizacao', $this->motorizacao);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}