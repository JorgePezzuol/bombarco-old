<?php

/**
 * This is the model base class for the table "bombarcoshop_produtos".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Bombarcoshop".
 *
 * Columns in table "bombarcoshop_produtos" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $nome
 * @property string $descricao
 * @property string $valor
 * @property integer $status
 * @property string $dataregistro
 * @property string $slug
 *
 */
abstract class BaseBombarcoshop extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'bombarcoshop_produtos';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Bombarcoshop|Bombarcoshops', $n);
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('nome, descricao, valor, slug', 'required'),
			array('status', 'numerical', 'integerOnly'=>true),
			array('nome, slug', 'length', 'max'=>120),
			array('valor', 'length', 'max'=>10),
			array('status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, nome, descricao, valor, status, dataregistro, slug', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'nome' => Yii::t('app', 'Nome'),
			'descricao' => Yii::t('app', 'Descricao'),
			'valor' => Yii::t('app', 'Valor'),
			'status' => Yii::t('app', 'Status'),
			'dataregistro' => Yii::t('app', 'Dataregistro'),
			'slug' => Yii::t('app', 'Slug'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('descricao', $this->descricao, true);
		$criteria->compare('valor', $this->valor, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('dataregistro', $this->dataregistro, true);
		$criteria->compare('slug', $this->slug, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}